### WORK IN PROGRESS ###
# Copied from pokebot-bizhawk, most of this config file does nothing right now.
### WORK IN PROGRESS ###

# Bot mode
# See Readme.md for a list of what each mode does and how to set it up
# Valid options: `spin`, `Starter`
# TODO: `manual`, `sweet scent`, `bunny hop`, `coords`, `bonk`, `fishing`, `starters`, `lugia`, `ho-oh`,
# TODO:  `petalburg loop`, `rayquaza`, `groudon`, `kyogre`, `southern island`, `mew`, `regis`, `deoxys runaways`
# TODO: `deoxys reset`, `fossil`, `castform`, `beldum`, `johto starters`, `buy premier balls`
bot_mode: Starter

# Coords config - this config is used if `bot_mode` is set to `coords`
# The bot will run between 2 different X,Y coordinates
# Use Advance Map to find coords: https://www.hackromtools.info/advance-map/
# Valid options: (integer)
coords:
  pos1:
    x: 0
    y: 0
  pos2:
    x: 0
    y: 0

# Bonk direction - this config is used if `bot_mode` is set to `bonk`
# Bonk mode will run left/right or up/down repeatedly until the trainer bonks a wall
# Valid options: `horizontal`, `vertical`
bonk_direction: horizontal

# Starters - this config is used if `bot_mode` is set to `starters`
# Choose a Pokémon to soft reset for, save the game with trainer facing the bag
# TODO: add Johto + FRLG starters as options in `starter`
# Valid options: `mudkip`, `treecko`, `torchic`
starter: mudkip

# Fossils - this config is used if `bot_mode` is set to `fossil`
# Save with trainer facing the Fossil Scientist in Devon after handing over the fossil and re-entering the room
# Valid options: `anorith`, `lileep`
fossil: anorith

# Autosaves
# Autosave every n encounters, set to `0` to disable
autosave_encounters: 1000

# Backups
# Backup PokéBot stats/ folder every n encounters
# HIGHLY recommended to backup stats/ folder regularly, totals.json is known to get corrupted during power outages
# Make sure you regularly delete old backups (especially if your stats folder is large!)
# Set to 0 to disable
backup_stats: 5000

# Auto catch
# (if disabled the bot will pause and wait for you to manually catch)
# Valid options: `true`, `false`
auto_catch: true

# Enable party leader to use Spore to sleep the wild Pokémon
# Valid options: `true`, `false`
use_spore: true

# Toggle catching shinies on/off
# CustomCatchConfig.py allows you to add filters to catch specific non-shiny Pokémon
# Valid options: `true`, `false`
catch_shinies: true

# Toggle battling all other wild Pokémon
# Catching shinies and Pokémon in CustomCatchConfig.py always takes priority over battling
# Valid options: `true`, `false`
battle: false

# Set true if the Deoxys puzzle is solved already and the last save is on the tile in front of the red triangle
# Valid options: `true`, `false`
deoxys_puzzle_solved: false

# Toggle auto stop when you are run out of balls
# Otherwise, if you want to continue without balls, this option needs to be false
# Valid options: `true`, `false`
auto_stop: true

# Save the game any catch
# Valid options: `true`, `false`
save_game_after_catch: true

# Enable pickup - https://bulbapedia.bulbagarden.net/wiki/Pickup_(Ability)#Generations_III_and_IV
# Valid options: `true`, `false`
pickup: true
# Threshold of party members with items before collecting the items from them
# Valid option: (integer 1-6)
pickup_threshold: 3

# Log Pokémon encounters to .csv files (logs to `stats/encounters/` folder)
# Valid options: `true`, `false`
log_encounters: true

# Pokeball overrides to catch certain Pokémon with specific balls
# Balls at the top of the list are highest priority, bottom is least priority
# The bot will fall back to `pokeball_priority` option if you have no balls specified in the list
# Examples are provided below (make sure to uncomment), note: `ball_override` is not validated by the config schema
# Valid options: Exact Pokémon name + `Dive Ball`, `Great Ball`, `Luxury Ball`, `Master Ball`,
# `Nest Ball`, `Poké Ball`, `Premier Ball`, `Repeat Ball`, `Timer Ball`, `Ultra Ball`
ball_override:
#  Abra:
#    - Ultra Ball
#    - Great Ball
#  Seedot:
#    - Master Ball

# Ball preferences (if no ball overrides are specified above)
# Top of the list is highest priority, bottom is least priority
# Valid options: `Dive Ball`, `Great Ball`, `Luxury Ball`, `Master Ball`, `Nest Ball`, `Poké Ball`, `Premier Ball`,
# `Repeat Ball`, `Timer Ball`, `Ultra Ball`
ball_priority:
  - Ultra Ball
  - Great Ball
  - Premier Ball
  - Poké Ball

# Discord Webhook settings
discord:
  # Discord rich presence, display current location + total stats and encounters/h on your profile
  # Valid options: `true`, `false`
  rich_presence: false
  # Toggle ALL webhooks on/off
  # Valid options: `true`, `false`
  webhooks: false
  # Your default Discord webhook URL,
  # WARNING: this webhook is SENSITIVE! If you leak your webhook, anyone will be able to post in your channel!
  global_webhook_url: https://discord.com/api/webhooks/<your_webhook_here>
  # Choose how the IVs will display, either basic layout on one line or formatted for readability
  # Valid options: `basic`, `formatted`
  iv_format: formatted
  # Bot ID is added to the footer of all Discord messages, useful if multiple bots are set to post in the same channel
  bot_id: PokéBot 1

  # Ping modes (a ping is a @<ping_id> in Discord, it adds a +1 badge to the channel)
  # Leave ping_mode blank for messages you don't want to be @ pinged for

  # Discord message: Shiny Pokémon encounters
  # `webhooks` must be set to `true`
  # Example: "Shiny Seedot encountered at Route 102! (plus a summary of phase stats)"
  shiny_pokemon_encounter:
    enable: true
    ping_mode:
    ping_id:
    # Optional webhook (uncomment) to post this notification to a different channel (defaults to `global_webhook_url` if not set)
    #webhook_url:

  # Discord messages: Pokémon encounter milestones messages every n encounters
  # `webhooks` must be set to `true`
  # Example: "Achieved 10,000 total Seedot encounters!", "Achieved 20,000 total Seedot encounters!" etc.
  pokemon_encounter_milestones:
    enable: true
    interval: 10000
    ping_mode:
    ping_id:
    # Optional webhook (uncomment) to post this notification to a different channel (defaults to `webhook_url` if not set)
    #webhook_url:

  # Discord messages: Shiny Pokémon encounter milestones every n encounters
  # `webhooks` must be set to `true`
  # Example: "Achieved 5 total shiny ✨Seedot✨ encounters!", "Achieved 10 total ✨Seedot✨ encounters!" etc.
  shiny_pokemon_encounter_milestones:
    enable: true
    interval: 5
    ping_mode:
    ping_id:
    # Optional webhook (uncomment) to post this notification to a different channel (defaults to `global_webhook_url` if not set)
    #webhook_url:

  # Discord messages: Total encounter milestones every n encounters
  # `webhooks` must be set to `true`
  # Example: "Achieved 25,000 total encounters!", "Achieved 50,000 total encounters!" etc.
  total_encounter_milestones:
    enable: true
    interval: 25000
    ping_mode:
    ping_id:
    # Optional webhook (uncomment) to post this notification to a different channel (defaults to `global_webhook_url` if not set)
    #webhook_url:

  # Discord messages: Phase summary
  # `webhooks` must be set to `true`
  # Example: "Current phase has reached 8,192 encounters!" + a bunch of stats about the current phase
  # Default config: first notification will be at 8,192 encounters, then at 10,000, 15,000, 20,000, 25,000 etc.
  # Stats include phase IV sum records, phase SV records, same Pokémon streak, current total encounters and shinies
  phase_summary:
    enable: true
    first_interval: 8192
    consequent_interval: 5000
    ping_mode:
    ping_id:
    # Optional webhook (uncomment) to post this notification to a different channel (defaults to `global_webhook_url` if not set)
    #webhook_url:

# Banned moves
# Any moves in this list will not be used in battle
banned_moves:
- None
  # 2-turn
- Bounce
- Dig
- Dive
- Fly
- Sky Attack
- Razor Wind
- Doom Desire
- Solar Beam
  # Inconsistent
- Fake Out
- False Swipe
- Nature Power
- Present
- Destiny Bond
- Wrap
- Snore
- Spit Up
- Bide
- Bind
- Counter
- Future Sight
- Mirror Coat
- Grudge
- Snatch
- Spite
- Curse
- Endeavor
- Revenge
- Assist
- Focus Punch
- Eruption
- Flail
  # Ends battle
- Roar
- Whirlwind
- Selfdestruct
- Perish Song
- Explosion
- Memento

# Cheats
# Perform "cheaty" actions such as peeking into eggs to check shininess, knowing instantly which route a roamer is on,
# instantly locate Feebas tiles etc.
mem_hacks:
  # Starters - enabling this will soft reset a few frames after selecting the starter Pokémon, bypassing throwing
  # the Pokémon out into battle animation, saving a lot of time
  # Valid options: `true`, `false`
  starters: false

# Misc. settings
# Note: all `misc` config options are not validated by the config schema
# Only use these if you know what you're doing
misc:
  # Shiny Pokémon delay
  # Delay catching a shiny encounter by n seconds, useful to give viewers of a stream some time to react
  shiny_delay: 0

  # OBS settings
  obs:
    # When enabled, the bot will !!! emulate the hotkey keystrokes !!! so only use this on dedicated stream PCs
    # TODO: use OBS webhooks instead
    # Take OBS screenshot after the `shiny_delay` to allow stream overlays to update
    screenshot: false
    # Save OBS replay buffer after `replay_buffer_delay`
    replay_buffer: false
    # After a shiny encounter, wait n seconds before saving the replay buffer
    # (runs in a separate thread and doesn't pause the bot itself)
    replay_buffer_delay: 0

    # OBS screenshot hotkey (bot expects .png file extension if posting to Discord)
    hotkey_screenshot: ["ctrl", "f11"]
    # OBS save replay buffer hotkey
    hotkey_replay_buffer: ["ctrl", "f12"]

    # OBS screenshot/replay buffer save directory (used to post stream screenshot to Discord)
    replay_dir: "./stream/replays/"
    # Webhook to post the OBS screenshot to Discord after encountering a shiny
    # Leave empty to disable posting
    webhook_url:

  # Web Server config
  # Makes data available via HTTP requests, useful if you're running a stream overlay
  # TODO: add list of available GET endpoints
  server:
    enable: false
    ip: 127.0.0.1
    port: 8888 # Server port must be unique for each instance of the bot you run
